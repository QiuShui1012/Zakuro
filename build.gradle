plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name "Gradle Local Repository"
		url "https://repo.gradle.org/gradle/libs-releases-local/"
	}
	maven {
		name "TerraformersMC"
		url "https://maven.terraformersmc.com/"
	}
	maven {
		name "Shedaniel's Maven"
		url "https://maven.shedaniel.me/"
	}
	maven {
		name "QiuShui1012's Github Maven"
		url "https://raw.github.com/QiuShui1012/Maven/main"
	}
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// QiuShui1012's Core Lib
	modImplementation include("zh.qiushui.mod:core-lib:${project.core_version}")

	// Mod Menu
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

	// Cloth Config
	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Jsoup
	implementation include("org.jsoup:jsoup:${project.jsoup_version}")
}

loom {
	accessWidenerPath = file("src/main/resources/zakuro.accessWidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		maven {
			name = "QiuShuiGithubMaven"
			url = uri('D:/Maven')
		}
	}
}